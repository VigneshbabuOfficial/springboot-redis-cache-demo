package com.redis.demo;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheConfig;
import org.springframework.cache.annotation.CachePut;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

@CacheConfig(cacheNames = "product")
public class ProductController {
	
	@Autowired
	private ProductRepository repository;
	
	@GetMapping("/product/{id}")  
	@Cacheable(value = "product", key = "#id")
	public Product getProductById(@PathVariable long id) {
		
		Optional<Product> productOptional = repository.findById(id);
		
		return productOptional.isEmpty() ? null : productOptional.get();
	}
	
	@PutMapping("/product/{id}")
	@CachePut(cacheNames = "product", key = "#id")
	public Product editProduct(@PathVariable long id, @RequestBody Product product) {
		Optional<Product> productOptional = repository.findById(id);
		return repository.save(product);
	}
	
	@DeleteMapping("/product/{id}")
	@CacheEvict(cacheNames = "product", key = "#id", beforeInvocation = true)
	public String removeProductById(@PathVariable long id) {...}

}
